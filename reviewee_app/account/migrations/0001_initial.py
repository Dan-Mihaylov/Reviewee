# Generated by Django 5.0.2 on 2024-03-06 17:55

import django.db.models.deletion
import django.utils.timezone
import reviewee_app.account.helpers
import reviewee_app.account.managers
import reviewee_app.common.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', reviewee_app.account.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUserProfile',
            fields=[
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('owner', models.BooleanField(default=False, editable=False)),
                ('username', models.CharField(blank=True, max_length=32, null=True, validators=[reviewee_app.common.validators.alphanumeric_and_dashes_validator])),
                ('first_name', models.CharField(blank=True, max_length=120, null=True, validators=[reviewee_app.common.validators.only_letters_and_spaces_values_validator])),
                ('last_name', models.CharField(blank=True, max_length=120, null=True, validators=[reviewee_app.common.validators.only_letters_and_spaces_values_validator])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=reviewee_app.account.helpers.user_profile_photo_upload_path)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
            ],
        ),
    ]
